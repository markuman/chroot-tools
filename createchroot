#!/bin/bash

set -e

function make_debian(){

	fakeroot fakechroot debootstrap $linux $folder http://cdn.debian.net/debian/

}

function make_ubuntu(){

	fakeroot fakechroot debootstrap --variant=minbase $linux $folder http://archive.ubuntu.com/ubuntu

}

function sudo_make_debian(){

        debootstrap $linux $folder http://cdn.debian.net/debian/

}

function sudo_make_ubuntu(){

        debootstrap --variant=minbase $linux $folder http://archive.ubuntu.com/ubuntu

}

function sudo_make_arch(){

	pacstrap -dGM $folder

}

function make_proot(){

	current=$(pwd)
 	mkdir -p ~/.bin/proot/ && cd ~/.bin/proot/
	git clone https://github.com/cedric-vincent/PRoot.git /tmp/proot/
	make -f /tmp/proot/src/GNUmakefile
	echo "PATH=$PATH:~/.bin/proot/" >> ~/.bashrc
	echo "export PATH" >> ~/.bashrc
	. ~/.bashrc
	rm -rf /tmp/proot/
	cd $current

}

if (("$#" == 1)); then

        if [ "$UID" -ne 0 ]; then

		# user + debian-based
		linux=$(lsb_release -c|awk {'print $2'})

		if [[ "$1" = "proot" ]]; then
			make_proot
		else
			folder=$1
		        case "$linux" in
		                "wheezy")       make_debian $linux $folder ;;
		                "sid")          make_debian $linux $folder ;;
		                "precise")      make_ubuntu $linux $folder ;;
		                "raring")       make_ubuntu $linux $folder ;;
		                *)              printf "Unknown or unsupported linux\n" ;;
		        esac
		fi
        else
		folder=$1
		if which pacstrap >/dev/null; then
			sudo_make_arch $folder
		elif which debootstrap >/dev/null; then
			linux=$(lsb_release -c|awk {'print $2'})
                        case "$linux" in
                                "wheezy")       sudo_make_debian $linux $folder ;;
                                "sid")          sudo_make_debian $linux $folder ;;
                                "precise")      sudo_make_ubuntu $linux $folder ;;
                                "raring")       sudo_make_ubuntu $linux $folder ;;
                                *)              printf "Unknown or unsupported linux\n" ;;
                        esac

		elif which yum >/dev/null; then
			printf "currently commented out, because it need a / directory\n"
#			mkdir -p $1/devel/var/lib/rpm
#			rpm --root $1/devel --initdb
#			yumdownloader --destdir=/tmp fedora-release
#			rpm --root $1/devel -ivh /tmp/fedora-release*rpm
#			yum --installroot=$1/devel install bash yum
#			yum --installroot=$1/devel groupinstall "minimal install"
		else
			printf "ups, error!\n"
		fi
	fi

elif (("$#" == 2)); then

	linux=$1
	folder=$2
        if [ "$UID" -ne 0 ]; then
                        case "$linux" in
                                "wheezy")       make_debian $linux $folder ;;
                                "sid")          make_debian $linux $folder ;;
                                "precise")      make_ubuntu $linux $folder ;;
                                "raring")       make_ubuntu $linux $folder ;;
                                *)              printf "Unknown or unsupported linux\n" ;;
                        esac
	else

                        case "$linux" in
                                "wheezy")       sudo_make_debian $linux $folder ;;
                                "sid")          sudo_make_debian $linux $folder ;;
                                "precise")      sudo_make_ubuntu $linux $folder ;;
                                "raring")       sudo_make_ubuntu $linux $folder ;;
				"arch")		sudo_make_arch $folder ;;
                                *)              printf "Unknown or unsupported linux\n" ;;
                        esac


	fi
fi
