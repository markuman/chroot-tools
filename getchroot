#!/bin/bash

set -e

GET_URL=http://getchroot.osuv.de
_CHROOT=~/.getchroot

function build_chroot {
	mkdir -p $_CHROOT/
	mkdir -p $2
	if [ -f $_CHROOT/$1.tar.xz ]; then
		tar -C $2 -xf $_CHROOT/$1.tar.xz 2> /dev/null
	else
		wget -P $_CHROOT/ $GET_URL/$1.tar.xz
		tar -C $2 -xf $_CHROOT/$1.tar.xz 2> /dev/null
	fi
	# copy resolv.conf from host into chroot
	cp /etc/resolv.conf $2/etc/resolv.conf
}

function update_chroot {

	current=$(cat <(curl -s $GET_URL/$1.md5sum))
	exist=$(md5sum $_CHROOT/$1.tar.xz|awk '{print$1}')

	if [[ "$current" = "$exist" ]]; then
		printf "No update for %s available\n" "$1"
	else
		rm $_CHROOT/$1.tar.xz
		wget -P $_CHROOT/ $GET_URL/$1.tar.xz
	fi

}

function print_help {

        echo '
        ./getchroot [option] <folder>

        [option]: arch squeeze wheezy sid precise raring fedora
        This will download a prepared tar.xz file to $_CHROOT and extract to your given folder

        EXAMPLES

        :~$ ./getchroot arch mychrootarch/
        This will download arch.tar.xz to $_CHROOT if not available and extract it to mychrootarch/

	:~$ ./getchroot update arch
	This will compare your local tar.xz container file with the online version. If they are different, it will be downloaded again.
        '

}


if (("$#" == 2)); then

	case "$1" in
		"arch") 	build_chroot $1 $2 ;;
		"wheezy") 	build_chroot $1 $2 ;;
		"sid") 		build_chroot $1 $2 ;;
		"precise") 	build_chroot $1 $2 ;;
		"raring") 	build_chroot $1 $2 ;;
		"fedora19") 	build_chroot $1 $2 ;;
		"fedora20")	build_chroot $1 $2 ;;
		"squeeze") 	build_chroot $1 $2 ;;
		"update")	update_chroot $2 ;;
		*)		echo -e "unknown option\n" ;;
	esac

else
        printf "Wrong usage!\n\n"
        print_help
        exit

fi
